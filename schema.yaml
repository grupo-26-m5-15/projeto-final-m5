openapi: 3.0.3
info:
  title: Biblioteka
  version: 1.0.0
  description: The application is a Restful API that aims to manage information related
    to the operation of various libraries.
paths:
  /api/books/:
    get:
      operationId: api_books_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBookList'
          description: ''
    post:
      operationId: api_books_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
  /api/books/{id}/:
    get:
      operationId: api_books_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    put:
      operationId: api_books_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    patch:
      operationId: api_books_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBook'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
  /api/books/{id}/copies/:
    get:
      operationId: api_books_copies_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCopyList'
          description: ''
    post:
      operationId: api_books_copies_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Copy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Copy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Copy'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Copy'
          description: ''
  /api/books/{id}/loans/:
    post:
      operationId: api_books_loans_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Loan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Loan'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
          description: ''
  /api/loans/:
    get:
      operationId: api_loans_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLoanList'
          description: ''
  /api/loans/{id}/users/:
    get:
      operationId: api_loans_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
          description: ''
    put:
      operationId: api_loans_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Loan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Loan'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
          description: ''
    patch:
      operationId: api_loans_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLoan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLoan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLoan'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
          description: ''
    delete:
      operationId: api_loans_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/login/:
    post:
      operationId: api_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTokenObtainPair'
          description: ''
  /api/users/:
    get:
      operationId: api_users_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /api/users/{cpf}/:
    get:
      operationId: api_users_retrieve
      parameters:
      - in: path
        name: cpf
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_update
      parameters:
      - in: path
        name: cpf
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_partial_update
      parameters:
      - in: path
        name: cpf
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_users_destroy
      parameters:
      - in: path
        name: cpf
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/{cpf}/library_blocks:
    get:
      operationId: api_users_library_blocks_list
      parameters:
      - in: path
        name: cpf
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserLibraryBlockListList'
          description: ''
  /api/users/{cpf}/loans:
    get:
      operationId: api_users_loans_list
      parameters:
      - in: path
        name: cpf
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedListLoanUserList'
          description: ''
  /api/users/{cpf}/unblock:
    put:
      operationId: api_users_unblock_update
      parameters:
      - in: path
        name: cpf
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLibraryBlock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLibraryBlock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLibraryBlock'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLibraryBlock'
          description: ''
    patch:
      operationId: api_users_unblock_partial_update
      parameters:
      - in: path
        name: cpf
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserLibraryBlock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserLibraryBlock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserLibraryBlock'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLibraryBlock'
          description: ''
  /api/users/{id}/create_admin:
    post:
      operationId: api_users_create_admin_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAdmin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAdmin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAdmin'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAdmin'
          description: ''
  /api/users/book/{id}/follow/:
    post:
      operationId: api_users_book_follow_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Following'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Following'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Following'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Following'
          description: ''
  /api/users/book/{id}/rate/:
    post:
      operationId: api_users_book_rate_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Rating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Rating'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
  /api/users/book/{title}/read_or_delete_rate/:
    get:
      operationId: api_users_book_read_or_delete_rate_retrieve
      parameters:
      - in: path
        name: title
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingSerializerGet'
          description: ''
    delete:
      operationId: api_users_book_read_or_delete_rate_destroy
      parameters:
      - in: path
        name: title
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/book/{title}/read_or_unfollow/:
    get:
      operationId: api_users_book_read_or_unfollow_retrieve
      parameters:
      - in: path
        name: title
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowingSerializerGet'
          description: ''
    delete:
      operationId: api_users_book_read_or_unfollow_destroy
      parameters:
      - in: path
        name: title
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/books/following/:
    get:
      operationId: api_users_books_following_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFollowingSerializerGetList'
          description: ''
  /api/users/books/rating/:
    get:
      operationId: api_users_books_rating_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRatingSerializerGetList'
          description: ''
  /api/users/create/:
    post:
      operationId: api_users_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/library/{cpf}/employee/:
    post:
      operationId: api_users_library_employee_create
      parameters:
      - in: path
        name: cpf
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibraryEmployee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LibraryEmployee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LibraryEmployee'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryEmployee'
          description: ''
  /api/users/library/{cpf}/retrieve_or_fire_employee/:
    get:
      operationId: api_users_library_retrieve_or_fire_employee_retrieve
      parameters:
      - in: path
        name: cpf
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryEmployee'
          description: ''
    put:
      operationId: api_users_library_retrieve_or_fire_employee_update
      parameters:
      - in: path
        name: cpf
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibraryEmployee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LibraryEmployee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LibraryEmployee'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryEmployee'
          description: ''
    patch:
      operationId: api_users_library_retrieve_or_fire_employee_partial_update
      parameters:
      - in: path
        name: cpf
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLibraryEmployee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLibraryEmployee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLibraryEmployee'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryEmployee'
          description: ''
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        type:
          type: string
          maxLength: 50
        author:
          type: string
          maxLength: 150
        synopsis:
          type: string
          maxLength: 255
        release_date:
          type: string
          format: date
        publishing_company:
          type: string
          maxLength: 11
        add_at:
          type: string
          format: date-time
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        copies:
          type: array
          items:
            $ref: '#/components/schemas/Copy'
          readOnly: true
      required:
      - add_at
      - author
      - copies
      - id
      - publishing_company
      - release_date
      - synopsis
      - title
      - type
    Copy:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        book:
          type: integer
        is_available:
          type: boolean
          nullable: true
      required:
      - book
      - id
    EmailTokenObtainPair:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    Following:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        book:
          allOf:
          - $ref: '#/components/schemas/Book'
          readOnly: true
      required:
      - book
      - id
      - user
    FollowingSerializerGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          writeOnly: true
        book:
          allOf:
          - $ref: '#/components/schemas/Book'
          readOnly: true
      required:
      - book
      - id
      - user
    Library:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        cnpj:
          type: string
          maxLength: 14
        email:
          type: string
          maxLength: 150
        address:
          type: string
          maxLength: 200
      required:
      - address
      - cnpj
      - email
      - id
      - name
    LibraryEmployee:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        library:
          allOf:
          - $ref: '#/components/schemas/Library'
          readOnly: true
        employee:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        is_employee:
          type: boolean
          nullable: true
      required:
      - employee
      - id
      - library
    ListLoanUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        start_date:
          type: string
          format: date-time
          readOnly: true
        end_date:
          type: string
          format: date-time
          nullable: true
        devolution_date:
          type: string
          format: date-time
          nullable: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          writeOnly: true
        copy:
          allOf:
          - $ref: '#/components/schemas/Copy'
          readOnly: true
        library:
          allOf:
          - $ref: '#/components/schemas/Library'
          readOnly: true
      required:
      - copy
      - id
      - library
      - start_date
      - user
    Loan:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        start_date:
          type: string
          format: date-time
          readOnly: true
        end_date:
          type: string
          format: date-time
          nullable: true
        devolution_date:
          type: string
          format: date-time
          nullable: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        copy:
          allOf:
          - $ref: '#/components/schemas/Copy'
          readOnly: true
        library:
          allOf:
          - $ref: '#/components/schemas/Library'
          readOnly: true
      required:
      - copy
      - id
      - library
      - start_date
      - user
    PaginatedBookList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Book'
    PaginatedCopyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Copy'
    PaginatedFollowingSerializerGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/FollowingSerializerGet'
    PaginatedListLoanUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ListLoanUser'
    PaginatedLoanList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Loan'
    PaginatedRatingSerializerGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/RatingSerializerGet'
    PaginatedUserLibraryBlockListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserLibraryBlockList'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedBook:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        type:
          type: string
          maxLength: 50
        author:
          type: string
          maxLength: 150
        synopsis:
          type: string
          maxLength: 255
        release_date:
          type: string
          format: date
        publishing_company:
          type: string
          maxLength: 11
        add_at:
          type: string
          format: date-time
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        copies:
          type: array
          items:
            $ref: '#/components/schemas/Copy'
          readOnly: true
    PatchedLibraryEmployee:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        library:
          allOf:
          - $ref: '#/components/schemas/Library'
          readOnly: true
        employee:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        is_employee:
          type: boolean
          nullable: true
    PatchedLoan:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        start_date:
          type: string
          format: date-time
          readOnly: true
        end_date:
          type: string
          format: date-time
          nullable: true
        devolution_date:
          type: string
          format: date-time
          nullable: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        copy:
          allOf:
          - $ref: '#/components/schemas/Copy'
          readOnly: true
        library:
          allOf:
          - $ref: '#/components/schemas/Library'
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 25
        last_name:
          type: string
          maxLength: 25
        email:
          type: string
          maxLength: 150
        birth_date:
          type: string
          format: date-time
          nullable: true
        cpf:
          type: string
          maxLength: 11
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
          maxLength: 128
        is_superuser:
          type: boolean
          nullable: true
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
          maxLength: 200
    PatchedUserLibraryBlock:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        library:
          allOf:
          - $ref: '#/components/schemas/Library'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        is_blocked:
          type: boolean
          nullable: true
    Rating:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        book:
          allOf:
          - $ref: '#/components/schemas/Book'
          readOnly: true
        rating:
          type: number
          format: double
        description:
          type: string
          nullable: true
      required:
      - book
      - id
      - rating
      - user
    RatingSerializerGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          writeOnly: true
        book:
          allOf:
          - $ref: '#/components/schemas/Book'
          readOnly: true
        rating:
          type: number
          format: double
        description:
          type: string
          nullable: true
      required:
      - book
      - id
      - rating
      - user
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 25
        last_name:
          type: string
          maxLength: 25
        email:
          type: string
          maxLength: 150
        birth_date:
          type: string
          format: date-time
          nullable: true
        cpf:
          type: string
          maxLength: 11
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
          maxLength: 128
        is_superuser:
          type: boolean
          readOnly: true
          nullable: true
        image:
          type: string
          format: uri
          nullable: true
          maxLength: 200
      required:
      - cpf
      - email
      - first_name
      - id
      - is_superuser
      - last_name
      - password
      - username
    UserAdmin:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 25
        last_name:
          type: string
          maxLength: 25
        email:
          type: string
          maxLength: 150
        birth_date:
          type: string
          format: date-time
          nullable: true
        cpf:
          type: string
          maxLength: 11
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
          maxLength: 128
        is_superuser:
          type: boolean
          readOnly: true
          nullable: true
        image:
          type: string
          format: uri
          nullable: true
          maxLength: 200
      required:
      - cpf
      - email
      - first_name
      - id
      - is_superuser
      - last_name
      - password
      - username
    UserLibraryBlock:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        library:
          allOf:
          - $ref: '#/components/schemas/Library'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        is_blocked:
          type: boolean
          nullable: true
      required:
      - id
      - library
      - user
    UserLibraryBlockList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        library:
          allOf:
          - $ref: '#/components/schemas/Library'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          writeOnly: true
        is_blocked:
          type: boolean
          nullable: true
      required:
      - id
      - library
      - user
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
